import discord
from discord import app_commands
from datetime import datetime, timedelta
from dotenv import load_dotenv
from keep_alive import keep_alive
import os

load_dotenv()
keep_alive()

GUILD_ID = discord.Object(id=1378644585965682748)

boss_info = {
    "‡πÄ‡∏ä‡∏•‡∏ó‡∏π‡∏ö‡∏≤": 6, "‡πÄ‡∏Ñ‡∏•‡∏ã‡∏≠‡∏™": 10, "‡∏ö‡∏≤‡∏ã‡∏¥‡∏•‡∏≤": 4, "‡∏ä‡∏≤‡∏ß‡∏≤‡∏ô": 12,
    "‡∏£‡∏≤‡∏ô‡∏µ‡∏°‡∏µ‡πÅ‡∏°‡πà‡∏°‡∏î": 6, "‡∏ó‡∏£‡∏≠‡∏°‡∏ö‡∏≤": 7, "‡πÄ‡∏ü‡∏•‡∏¥‡∏™": 3, "‡πÄ‡∏≠‡∏ô‡∏Ñ‡∏π‡∏£‡∏≤": 6,
    "‡∏ó‡∏≤‡∏•‡∏≤‡∏Ñ‡∏¥‡∏ô": 10, "‡πÅ‡∏ö‡∏ô‡∏î‡πå‡πÑ‡∏•‡∏ó‡πå": 12, "‡∏ó‡∏µ‡∏°‡∏µ‡∏ó‡∏£‡∏¥‡∏™": 8, "‡∏ã‡∏≤‡∏£‡πå‡∏Å‡∏≤": 10,
    "‡∏™‡∏ï‡∏±‡∏ô": 7, "‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏™‡∏ï‡πå": 6, "‡∏°‡∏¥‡∏ß‡πÅ‡∏ó‡∏ô‡∏ï‡πå‡∏Ñ‡∏π‡∏£‡πå‡∏°‡∏≤": 8, "‡∏Ñ‡∏π‡∏£‡∏°‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡∏ô‡πÄ‡∏õ‡∏∑‡πâ‡∏≠‡∏ô": 8,
    "‡∏Ñ‡∏≤‡∏ó‡∏≤‡∏ô": 10, "‡∏Ñ‡∏≠‡∏£‡πå‡∏ã‡∏≤‡πÄ‡∏ã‡∏õ‡∏ï‡πâ‡∏≤": 10, "‡∏°‡∏≤‡∏ó‡∏π‡∏£‡∏≤": 6, "‡πÄ‡∏ö‡∏£‡∏Å‡πâ‡∏≤": 6,
    "‡∏ö‡∏±‡∏ô‡∏ô‡∏≤‡πÇ‡∏£‡∏Ñ": 5, "‡πÄ‡∏°‡∏î‡∏π‡∏ã‡πà‡∏≤": 10, "‡πÅ‡∏ö‡∏•‡πá‡∏Ñ‡∏•‡∏¥‡∏•‡∏•‡∏µ‡πà": 12, "‡πÄ‡∏ö‡∏Æ‡∏µ‡∏°‡∏≠‡∏ò": 9,
    "‡∏î‡∏£‡∏≤‡∏Å‡πâ‡∏≠‡∏ô‡∏ö‡∏µ‡∏™‡∏ï‡πå": 12, "‡∏Ñ‡∏π‡∏°‡πà‡∏≤‡∏ä‡∏±‡πâ‡∏ô3": 8, "‡∏Ñ‡∏π‡∏°‡πà‡∏≤‡∏ä‡∏±‡πâ‡∏ô6": 10, "‡∏Ñ‡∏π‡∏°‡πà‡∏≤‡∏ä‡∏±‡πâ‡∏ô7": 10
}

class MyClient(discord.Client):
    def __init__(self):
        super().__init__(intents=discord.Intents.default())
        self.tree = app_commands.CommandTree(self)

    async def on_ready(self):
        await self.tree.sync(guild=GUILD_ID)
        print(f"‚úÖ Logged in as {self.user}")
        print(f"üîÅ Slash commands synced to guild {GUILD_ID.id}")

client = MyClient()

@app_commands.autocomplete("bossname")
@app_commands.guilds(GUILD_ID)
async def bossname_autocomplete(interaction: discord.Interaction, current: str):
    matches = [
        app_commands.Choice(name=name, value=name)
        for name in boss_info if current.lower() in name.lower()
    ]
    return matches[:25]

@app_commands.guilds(GUILD_ID)
@client.tree.command(name="‡∏ö‡∏≠‡∏™‡∏ï‡∏≤‡∏¢", description="‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏™ ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà")
@app_commands.describe(bossname="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏™", death_time="‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≤‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô 14:00")
async def boss_dead(interaction: discord.Interaction, bossname: str, death_time: str):
    try:
        now = datetime.now()
        dt = datetime.strptime(death_time, "%H:%M").replace(
            year=now.year, month=now.month, day=now.day
        )
        if dt < now:
            dt += timedelta(days=1)
        add_hour = boss_info.get(bossname)
        respawn = dt + timedelta(hours=add_hour)
        embed = discord.Embed(title=f"üìã ‡∏ö‡∏≠‡∏™: {bossname}", color=0x00ff99)
        embed.add_field(name="üïì ‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≤‡∏¢", value=death_time, inline=True)
        embed.add_field(name="‚è± ‡πÄ‡∏ß‡∏•‡∏≤‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì", value=f"{add_hour} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á", inline=True)
        embed.add_field(name="üí• ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà", value=respawn.strftime("%H:%M"), inline=False)
        embed.set_footer(text=f"‡πÇ‡∏î‡∏¢ {interaction.user.display_name}")
        await interaction.response.send_message(embed=embed)
    except Exception as e:
        await interaction.response.send_message(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}", ephemeral=True)

client.run(os.getenv("DISCORD_TOKEN"))
